задача: Создайте переменную 'var', которая хранит в себе число 5,
тест: var == 5

задача: Создайте переменную 'a' со значением 1 и переменную 'b' со значением 8, а затем создайте переменную 'c' с суммой этих цифр,
тест: a == 1
тест: b == 8
тест: c == 9

задача: Создайте переменную n со значением 5, затем сделайте переменную v со значением переменной n * 18,
тест: n == 5
тест: v == n*18

задача: Напишите функцию 'format', которая принимает аргументы имя и возраст, возвращает текст в формате 'Имя: {имя}, возраст: {возраст}',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

задача: Создайте функцию 'sum', которая принимает 2 аргумента и возвращает сумму этих аргументов,
тест: sum(1,2) == 3
тест: sum(12,31) == 43
тест: sum(123,17) == 140

задача: Напишите функцию 'sumstr', которая принимает 2 строки и соединяет их в 1. Пример: sumstr('ab', 'bc') - 'abbc',
тест: sumstr('a','b') == 'ab'
тест: sumstr('afff','bss') == 'afffbss'
тест: sumstr('123','cssdb') == '123cssdb'

задача: Напишите функцию 'power_of', которая принимает два аргумента - число и степень, и возвращает результат возведения числа в указанную степень,
тест: power_of(2,2) == 4
тест: power_of(4,2) == 16
тест: power_of(3,3) == 27

задача: Напишите функцию 'len_of', которая принимает на вход строку и возвращает ее длину,
тест: len_of('Abcdd') == 5
тест: len_of('Benthddd') == 8
тест: len_of('vbfhcnd') == 7

*  задача: Напишите функцию 'middle', которая принимает два аргумента и возвращает их среднее арифметическое.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию 'is_greater_than', которая принимает два аргумента и возвращает True, если первый аргумент больше второго, и False в противном случае.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию 'multiply', которая принимает два аргумента и возвращает их остаток от деления.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию 'is_palindrom', которая принимает аргумент и возвращает True, если аргумент является палиндромом, и False в противном случае.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию 'the_same', которая принимает два аргумента и возвращает True, если они оба положительны или оба отрицательны, и False в противном случае.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию 'is_multiply', которая принимает 2 аргумента и возвращает True, если 1 можно нацело поделить на 2 без остатка, и False в противном случае,
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

задача: Напишите функцию 'is_five', которая принимает аргумент и возвращает True если аргумент равен 5 или False если не равен,
тест: is_five(1) == False
тест: is_five(5) == True
тест: is_five(123) == False

задача: Напишите функцию 'is_equal', которая принимает аргументы a и b(числа) и возвращает True если они равны, или False, если нет,
тест: is_equal(13,2) == False
тест: is_equal(12,12) == True
тест: is_equal(12,157) == False

задача: Напишите функцию 'is_letter', которая проверяет, является ли символ буквой/цифрой, и возвращает True/False соответственно.,
тест: is_letter(4) == False
тест: is_letter('abc') == True
тест: is_letter(12) == False

задача: Напишите функцию 'is_even', которая проверяет, является ли число четным или нечетным, и выводит True, если четное и False если нет.,
тест: is_even(43) == False
тест: is_even(6) == True
тест: is_even(123) == False

задача: Создайте список 'a', который включает числа 1, 2, 5,
тест: a[0] == 1
тест: a[1] == 2
тест: a[2] == 5

задача: Напиши функцию 'add', которая принимает 2 аргумента: список и элемент, добавляет в конец списка этот элемент и возвращает получившийся список,
тест: add([1, 2], 3) == [1,2,3]
тест: add([6, 3], 2) == [6,3,2]
тест: add([8, 2], 1) == [8,2,1]

задача: Напиши функцию 'while' которая возвращает строку с числами от 1 до n(аргумент функции) включительно.,
тест: while(5) == '12345'
тест: while(3) == '123'
тест: while(9) == '123456789'

задача: Напишите функцию func, которая принимает список, а возвращает строку со всеми элементами этого списка без пробелов,
тест: func(['func', '2']) == 'func2'
тест: func(['4','3']) == '43'
тест: func(['14','0']) == '140'

задача: Напишите функцию less_five, которая принимает список. Возвращает список со всеми элементами, число которых меньше 5,
тест: less_five([1,4,8,9,11,45]) == [1,4]
тест: less_five([4,7,8,2,141,4]) == [4,2,4]
тест: less_five([14,17,2,2,41,54]) == [2,2]

задача: Напишите функцию 'even_num', которая принимает список, а возвращает все четные числа этого списка,
тест: even_num([1,4,8,9,11,45]) == [4,8]
тест: even_num([4,7,8,2,141,4]) == [4,8,2,4]
тест: even_num([14,17,2,2,41,54]) == [14,2,2,54]

*  задача: Напишите функцию 'sum_list', которая принимает на вход список чисел и возвращает сумму всех чисел в списке.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию 'is_odd', которая принимает на вход список чисел и возвращает список, содержащий только нечетные числа из исходного списка.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию 'start_with_a', которая принимает на вход список строк и возвращает список, содержащий только те строки, которые начинаются с буквы "A".',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию 'more_than_ten', которая принимает на вход список чисел и возвращает список, содержащий только те числа, которые больше 10 и меньше 20.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию 'max_number', которая принимает список чисел и возвращает наибольшее значение.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию 'reverse_string', которая принимает строку и возвращает ее в обратном порядке.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию 'subtracting', которая принимает два числа и возвращает их разность.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию 'unique_list', которая принимает список и возвращает новый список, содержащий только уникальные элементы.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию 'number_list', которая принимает список и возвращает новый список, содержащий только элементы, которые являются числами.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию, которая принимает список и возвращает новый список, содержащий только элементы, большие первого элемента списка.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'

*  задача: Напишите функцию, которая принимает число и возвращает True, если оно положительное, и False, если отрицательное.',
тест: format('ab', 34) == 'Имя: ab, возраст: 34'
тест: format('a3bc', 124) == 'Имя: a3bc, возраст: 124'
тест: format('22b', 9034) == 'Имя: 22b, возраст: 9034'